<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'validator.builder' shared service.

$this->privates['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();

$instance->setConstraintValidatorFactory(new \Symfony\Component\Validator\ContainerConstraintValidatorFactory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'PrestaShopBundle\\Form\\Validator\\Constraints\\TinyMceMaxLengthValidator' => ['services', 'validator.unique.tinymce_max_length_validator', 'getValidator_Unique_TinymceMaxLengthValidatorService.php', true],
    'PrestaShop\\Module\\FacetedSearch\\Constraint\\UrlSegmentValidator' => ['services', 'prestashop.module.ps_facetedsearch.constraint.url_segment_validator', 'getPrestashop_Module_PsFacetedsearch_Constraint_UrlSegmentValidatorService.php', true],
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\AddressDniRequiredValidator' => ['services', 'prestashop.core.constraint_validator.address_country_dni_validator', 'getPrestashop_Core_ConstraintValidator_AddressCountryDniValidatorService.php', true],
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\AddressStateRequiredValidator' => ['services', 'prestashop.core.constraint_validator.address_country_state_validator', 'getPrestashop_Core_ConstraintValidator_AddressCountryStateValidatorService.php', true],
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\AddressZipCodeValidator' => ['services', 'prestashop.core.constraint_validator.address_zip_code_validator', 'getPrestashop_Core_ConstraintValidator_AddressZipCodeValidatorService.php', true],
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\CleanHtmlValidator' => ['services', 'prestashop.core.constraint_validator.clean_html_validator', 'getPrestashop_Core_ConstraintValidator_CleanHtmlValidatorService.php', true],
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\CustomerNameValidator' => ['services', 'prestashop.core.constraint_validator.customer_name_validator', 'getPrestashop_Core_ConstraintValidator_CustomerNameValidatorService.php', true],
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\DefaultLanguageValidator' => ['services', 'prestashop.core.constraint_validator.default_language_validator', 'getPrestashop_Core_ConstraintValidator_DefaultLanguageValidatorService.php', true],
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\ExistingCustomerEmailValidator' => ['services', 'prestashop.core.constraint_validator.existing_customer_email_validator', 'getPrestashop_Core_ConstraintValidator_ExistingCustomerEmailValidatorService.php', true],
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\IsUrlRewriteValidator' => ['services', 'prestashop.core.constraint_validator.is_url_rewrite_validator', 'getPrestashop_Core_ConstraintValidator_IsUrlRewriteValidatorService.php', true],
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\TypedRegexValidator' => ['services', 'prestashop.core.constraint_validator.typed_regex_validator', 'getPrestashop_Core_ConstraintValidator_TypedRegexValidatorService.php', true],
    'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => ['privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService.php', true],
    'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => ['privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService.php', true],
    'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => ['privates', 'validator.email', 'getValidator_EmailService.php', true],
    'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => ['privates', 'validator.expression', 'getValidator_ExpressionService.php', true],
    'Symfony\\Component\\Validator\\Constraints\\NotCompromisedPasswordValidator' => ['privates', 'validator.not_compromised_password', 'getValidator_NotCompromisedPasswordService.php', true],
    'doctrine.orm.validator.unique' => ['privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService.php', true],
    'security.validator.user_password' => ['privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService.php', true],
    'tinymce_max_length_validator' => ['services', 'validator.unique.tinymce_max_length_validator', 'getValidator_Unique_TinymceMaxLengthValidatorService.php', true],
    'validator.expression' => ['privates', 'validator.expression', 'getValidator_ExpressionService.php', true],
], [
    'PrestaShopBundle\\Form\\Validator\\Constraints\\TinyMceMaxLengthValidator' => '?',
    'PrestaShop\\Module\\FacetedSearch\\Constraint\\UrlSegmentValidator' => '?',
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\AddressDniRequiredValidator' => '?',
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\AddressStateRequiredValidator' => '?',
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\AddressZipCodeValidator' => '?',
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\CleanHtmlValidator' => '?',
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\CustomerNameValidator' => '?',
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\DefaultLanguageValidator' => '?',
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\ExistingCustomerEmailValidator' => '?',
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\IsUrlRewriteValidator' => '?',
    'PrestaShop\\PrestaShop\\Core\\ConstraintValidator\\TypedRegexValidator' => '?',
    'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => '?',
    'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => '?',
    'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => '?',
    'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => '?',
    'Symfony\\Component\\Validator\\Constraints\\NotCompromisedPasswordValidator' => '?',
    'doctrine.orm.validator.unique' => '?',
    'security.validator.user_password' => '?',
    'tinymce_max_length_validator' => '?',
    'validator.expression' => '?',
])));
$instance->setTranslator(new \Symfony\Component\Validator\Util\LegacyTranslatorProxy(($this->services['translator'] ?? $this->getTranslatorService())));
$instance->setTranslationDomain('validators');
$instance->addXmlMappings([0 => (\dirname(__DIR__, 4).'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml')]);
$instance->enableAnnotationMapping(($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService()));
$instance->addMethodMapping('loadValidatorMetadata');
$instance->setMappingCache(\Symfony\Component\Cache\Adapter\PhpArrayAdapter::create(($this->targetDir.''.'/validation.php'), ($this->privates['cache.validator'] ?? $this->load('getCache_ValidatorService.php'))));
$instance->addObjectInitializers([0 => new \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer(($this->services['doctrine'] ?? $this->getDoctrineService()))]);
$instance->addLoader(new \Symfony\Bridge\Doctrine\Validator\DoctrineLoader(($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()), NULL));

return $instance;
